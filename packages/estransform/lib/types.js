/** @typedef {import('@swc/core').Node} Node */
/** @typedef {import('@swc/core').Accessibility} Accessibility */
/** @typedef {import('@swc/core').ArrayExpression} ArrayExpression */
/** @typedef {import('@swc/core').ArrayPattern} ArrayPattern */
/** @typedef {import('@swc/core').ArrowFunctionExpression} ArrowFunctionExpression */
/** @typedef {import('@swc/core').Argument} Argument */
/** @typedef {import('@swc/core').AssignmentExpression} AssignmentExpression */
/** @typedef {import('@swc/core').AssignmentPattern} AssignmentPattern */
/** @typedef {import('@swc/core').AssignmentPatternProperty} AssignmentPatternProperty */
/** @typedef {import('@swc/core').AssignmentProperty} AssignmentProperty */
/** @typedef {import('@swc/core').AwaitExpression} AwaitExpression */
/** @typedef {import('@swc/core').BinaryExpression} BinaryExpression */
/** @typedef {import('@swc/core').BlockStatement} BlockStatement */
/** @typedef {import('@swc/core').BooleanLiteral} BooleanLiteral */
/** @typedef {import('@swc/core').BreakStatement} BreakStatement */
/** @typedef {import('@swc/core').CallExpression} CallExpression */
/** @typedef {import('@swc/core').CatchClause} CatchClause */
/** @typedef {import('@swc/core').Class} Class */
/** @typedef {import('@swc/core').ClassDeclaration} ClassDeclaration */
/** @typedef {import('@swc/core').ClassExpression} ClassExpression */
/** @typedef {import('@swc/core').ClassMember} ClassMember */
/** @typedef {import('@swc/core').ClassMethod} ClassMethod */
/** @typedef {import('@swc/core').ClassProperty} ClassProperty */
/** @typedef {import('@swc/core').ComputedPropName} ComputedPropName */
/** @typedef {import('@swc/core').ConditionalExpression} ConditionalExpression */
/** @typedef {import('@swc/core').Constructor} Constructor */
/** @typedef {import('@swc/core').ContinueStatement} ContinueStatement */
/** @typedef {import('@swc/core').DebuggerStatement} DebuggerStatement */
/** @typedef {import('@swc/core').Declaration} Declaration */
/** @typedef {import('@swc/core').Decorator} Decorator */
/** @typedef {import('@swc/core').DefaultDecl} DefaultDecl */
/** @typedef {import('@swc/core').DoWhileStatement} DoWhileStatement */
/** @typedef {import('@swc/core').EmptyStatement} EmptyStatement */
/** @typedef {import('@swc/core').ExportAllDeclaration} ExportAllDeclaration */
/** @typedef {import('@swc/core').ExportDeclaration} ExportDeclaration */
/** @typedef {import('@swc/core').ExportDefaultDeclaration} ExportDefaultDeclaration */
/** @typedef {import('@swc/core').ExportDefaultExpression} ExportDefaultExpression */
/** @typedef {import('@swc/core').ExportDefaultSpecifier} ExportDefaultSpecifier */
/** @typedef {import('@swc/core').ExportNamedDeclaration} ExportNamedDeclaration */
/** @typedef {import('@swc/core').ExportNamespaceSpecifier} ExportNamespaceSpecifier */
/** @typedef {import('@swc/core').ExportSpecifier} ExportSpecifier */
/** @typedef {import('@swc/core').Expression} Expression */
/** @typedef {import('@swc/core').ExpressionStatement} ExpressionStatement */
/** @typedef {import('@swc/core').Fn} Fn */
/** @typedef {import('@swc/core').ForInStatement} ForInStatement */
/** @typedef {import('@swc/core').ForOfStatement} ForOfStatement */
/** @typedef {import('@swc/core').ForStatement} ForStatement */
/** @typedef {import('@swc/core').FunctionDeclaration} FunctionDeclaration */
/** @typedef {import('@swc/core').FunctionExpression} FunctionExpression */
/** @typedef {import('@swc/core').GetterProperty} GetterProperty */
/** @typedef {import('@swc/core').Identifier} Identifier */
/** @typedef {import('@swc/core').IfStatement} IfStatement */
/** @typedef {import('@swc/core').ImportDeclaration} ImportDeclaration */
/** @typedef {import('@swc/core').ImportDefaultSpecifier} ImportDefaultSpecifier */
/** @typedef {import('@swc/core').ImportNamespaceSpecifier} ImportNamespaceSpecifier */
/** @typedef {import('@swc/core').ImportSpecifier} ImportSpecifier */
/** @typedef {import('@swc/core').JSXAttribute} JSXAttribute */
/** @typedef {import('@swc/core').JSXAttributeName} JSXAttributeName */
/** @typedef {import('@swc/core').JSXAttributeOrSpread} JSXAttributeOrSpread */
/** @typedef {import('@swc/core').JSXAttrValue} JSXAttrValue */
/** @typedef {import('@swc/core').JSXClosingElement} JSXClosingElement */
/** @typedef {import('@swc/core').JSXClosingFragment} JSXClosingFragment */
/** @typedef {import('@swc/core').JSXElement} JSXElement */
/** @typedef {import('@swc/core').JSXElementChild} JSXElementChild */
/** @typedef {import('@swc/core').JSXElementName} JSXElementName */
/** @typedef {import('@swc/core').JSXEmptyExpression} JSXEmptyExpression */
/** @typedef {import('@swc/core').JSXExpressionContainer} JSXExpressionContainer */
/** @typedef {import('@swc/core').JSXFragment} JSXFragment */
/** @typedef {import('@swc/core').JSXMemberExpression} JSXMemberExpression */
/** @typedef {import('@swc/core').JSXNamespacedName} JSXNamespacedName */
/** @typedef {import('@swc/core').JSXObject} JSXObject */
/** @typedef {import('@swc/core').JSXOpeningElement} JSXOpeningElement */
/** @typedef {import('@swc/core').JSXOpeningFragment} JSXOpeningFragment */
/** @typedef {import('@swc/core').JSXSpreadChild} JSXSpreadChild */
/** @typedef {import('@swc/core').JSXText} JSXText */
/** @typedef {import('@swc/core').KeyValuePatternProperty} KeyValuePatternProperty */
/** @typedef {import('@swc/core').KeyValueProperty} KeyValueProperty */
/** @typedef {import('@swc/core').LabeledStatement} LabeledStatement */
/** @typedef {import('@swc/core').MemberExpression} MemberExpression */
/** @typedef {import('@swc/core').MetaProperty} MetaProperty */
/** @typedef {import('@swc/core').MethodProperty} MethodProperty */
/** @typedef {import('@swc/core').Module} Module */
/** @typedef {import('@swc/core').ModuleDeclaration} ModuleDeclaration */
/** @typedef {import('@swc/core').ModuleItem} ModuleItem */
/** @typedef {import('@swc/core').NamedExportSpecifier} NamedExportSpecifier */
/** @typedef {import('@swc/core').NamedImportSpecifier} NamedImportSpecifier */
/** @typedef {import('@swc/core').NewExpression} NewExpression */
/** @typedef {import('@swc/core').NullLiteral} NullLiteral */
/** @typedef {import('@swc/core').NumericLiteral} NumericLiteral */
/** @typedef {import('@swc/core').ObjectExpression} ObjectExpression */
/** @typedef {import('@swc/core').ObjectPattern} ObjectPattern */
/** @typedef {import('@swc/core').ObjectPatternProperty} ObjectPatternProperty */
/** @typedef {import('@swc/core').OptionalChainingExpression} OptionalChainingExpression */
/** @typedef {import('@swc/core').ParenthesisExpression} ParenthesisExpression */
/** @typedef {import('@swc/core').Pattern} Pattern */
/** @typedef {import('@swc/core').PrivateMethod} PrivateMethod */
/** @typedef {import('@swc/core').PrivateName} PrivateName */
/** @typedef {import('@swc/core').PrivateProperty} PrivateProperty */
/** @typedef {import('@swc/core').Program} Program */
/** @typedef {import('@swc/core').Property} Property */
/** @typedef {import('@swc/core').PropertyName} PropertyName */
/** @typedef {import('@swc/core').RegExpLiteral} RegExpLiteral */
/** @typedef {import('@swc/core').RestElement} RestElement */
/** @typedef {import('@swc/core').ReturnStatement} ReturnStatement */
/** @typedef {import('@swc/core').Script} Script */
/** @typedef {import('@swc/core').SequenceExpression} SequenceExpression */
/** @typedef {import('@swc/core').SetterProperty} SetterProperty */
/** @typedef {import('@swc/core').SpreadElement} SpreadElement */
/** @typedef {import('@swc/core').Statement} Statement */
/** @typedef {import('@swc/core').StringLiteral} StringLiteral */
/** @typedef {import('@swc/core').Super} Super */
/** @typedef {import('@swc/core').SwitchCase} SwitchCase */
/** @typedef {import('@swc/core').SwitchStatement} SwitchStatement */
/** @typedef {import('@swc/core').TaggedTemplateExpression} TaggedTemplateExpression */
/** @typedef {import('@swc/core').TemplateLiteral} TemplateLiteral */
/** @typedef {import('@swc/core').ThisExpression} ThisExpression */
/** @typedef {import('@swc/core').ThrowStatement} ThrowStatement */
/** @typedef {import('@swc/core').TryStatement} TryStatement */
/** @typedef {import('@swc/core').TsAsExpression} TsAsExpression */
/** @typedef {import('@swc/core').TsEntityName} TsEntityName */
/** @typedef {import('@swc/core').TsEnumDeclaration} TsEnumDeclaration */
/** @typedef {import('@swc/core').TsEnumMember} TsEnumMember */
/** @typedef {import('@swc/core').TsEnumMemberId} TsEnumMemberId */
/** @typedef {import('@swc/core').TsExportAssignment} TsExportAssignment */
/** @typedef {import('@swc/core').TsExpressionWithTypeArguments} TsExpressionWithTypeArguments */
/** @typedef {import('@swc/core').TsExternalModuleReference} TsExternalModuleReference */
/** @typedef {import('@swc/core').TsFnParameter} TsFnParameter */
/** @typedef {import('@swc/core').TsImportEqualsDeclaration} TsImportEqualsDeclaration */
/** @typedef {import('@swc/core').TsIndexSignature} TsIndexSignature */
/** @typedef {import('@swc/core').TsInterfaceBody} TsInterfaceBody */
/** @typedef {import('@swc/core').TsInterfaceDeclaration} TsInterfaceDeclaration */
/** @typedef {import('@swc/core').TsModuleBlock} TsModuleBlock */
/** @typedef {import('@swc/core').TsModuleDeclaration} TsModuleDeclaration */
/** @typedef {import('@swc/core').TsModuleName} TsModuleName */
/** @typedef {import('@swc/core').TsModuleReference} TsModuleReference */
/** @typedef {import('@swc/core').TsNamespaceBody} TsNamespaceBody */
/** @typedef {import('@swc/core').TsNamespaceDeclaration} TsNamespaceDeclaration */
/** @typedef {import('@swc/core').TsNamespaceExportDeclaration} TsNamespaceExportDeclaration */
/** @typedef {import('@swc/core').TsNonNullExpression} TsNonNullExpression */
/** @typedef {import('@swc/core').TsParameterProperty} TsParameterProperty */
/** @typedef {import('@swc/core').TsParameterPropertyParameter} TsParameterPropertyParameter */
/** @typedef {import('@swc/core').TsQualifiedName} TsQualifiedName */
/** @typedef {import('@swc/core').TsType} TsType */
/** @typedef {import('@swc/core').TsTypeAliasDeclaration} TsTypeAliasDeclaration */
/** @typedef {import('@swc/core').TsTypeAnnotation} TsTypeAnnotation */
/** @typedef {import('@swc/core').TsTypeAssertion} TsTypeAssertion */
/** @typedef {import('@swc/core').TsTypeElement} TsTypeElement */
/** @typedef {import('@swc/core').TsTypeParameter} TsTypeParameter */
/** @typedef {import('@swc/core').TsTypeParameterDeclaration} TsTypeParameterDeclaration */
/** @typedef {import('@swc/core').TsTypeParameterInstantiation} TsTypeParameterInstantiation */
/** @typedef {import('@swc/core').UnaryExpression} UnaryExpression */
/** @typedef {import('@swc/core').UpdateExpression} UpdateExpression */
/** @typedef {import('@swc/core').VariableDeclaration} VariableDeclaration */
/** @typedef {import('@swc/core').VariableDeclarator} VariableDeclarator */
/** @typedef {import('@swc/core').WhileStatement} WhileStatement */
/** @typedef {import('@swc/core').WithStatement} WithStatement */
/** @typedef {import('@swc/core').YieldExpression} YieldExpression */
/** @typedef {import('@swc/core').Param} Param */
/** @typedef {import('@swc/core').ExprOrSpread} ExprOrSpread */
/** @typedef {import('@swc/core').TsConstAssertion} TsConstAssertion */

export const types = {};
